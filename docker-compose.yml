version: '2'

services:

  # cAdvisor dashboard for container metrics
  cadvisor:
    image: google/cadvisor:${CADVISOR_VER}
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  # Celery beat for Cyphon
  celerybeat:
    extends:
      file: common-services.yml
      service: cyphon-prod
    restart: always
    command: ../entrypoints/run_celerybeat.sh
    volumes_from:
      - geoip
    links:
      - elasticsearch
      - mongo
      - postgres
      - rabbit
    depends_on:
      - cyphon
      - rabbit

  # Celery worker for Cyphon
  celeryworker:
    extends:
      file: common-services.yml
      service: cyphon-prod
    restart: always
    command: ../entrypoints/run_celeryworker.sh
    volumes_from:
      - geoip
    links:
      - elasticsearch
      - mongo
      - postgres
      - rabbit
    depends_on:
      - cyphon
      - rabbit

  # Cyclops UI for Cyphon
  cyclops:
    image: dunbar/cyclops:${CYCLOPS_VER}
    restart: always
    links:
      - nginx
    depends_on:
      - nginx

  # Cyphon Engine
  cyphon:
    extends:
      file: common-services.yml
      service: cyphon-prod
    volumes:
      - ./config/cyphon/fixtures:/usr/src/app/cyphon/fixtures:ro
    volumes_from:
      - geoip
    links:
      - elasticsearch
      - mongo
      - postgres
    depends_on:
      - postgres

  # Elasticsearch storage backend
  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_VER}
    restart: always
    volumes:
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro

  # GeoLite2 databases for geolocating IP addresses
  geoip:
    image: dunbar/geoip
    restart: always

  # Kibana dashboard for Elasticsearch data
  kibana:
    image: kibana:${KIBANA_VER}
    restart: always
    environment:
      LOGSPOUT: ignore  # don't send Kibana's logs to Logspout
    links:
      - elasticsearch
    depends_on:
      - elasticsearch

  # Logspout to collect container logs
  logspout:
    image: gliderlabs/logspout:${LOGSPOUT_VER}
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: syslog://logstash:5000
    links:
      - logstash
    depends_on:
      - logstash

  # Logstash log ingestion
  logstash:
    image: logstash:${LOGSTASH_VER}
    restart: always
    command: logstash -f /etc/logstash/conf.d --config.reload.automatic
    volumes:
      - ./config/logstash/conf:/etc/logstash/conf.d:ro
      - ./config/logstash/patterns:/etc/logstash/patterns:ro
      - ./config/logstash/jvm.options:/etc/logstash/jvm.options:ro
      - ./config/logstash/logstash.yml:/etc/logstash/logstash.yml:ro
    links:
      - elasticsearch
      - rabbit

  # MongoDB storage backend
  mongo:
    image: mongo:${MONGODB_VER}
    restart: always

  # Nginx web server
  nginx:
    image: nginx:${NGINX_VER}
    restart: always
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /www/static
    volumes_from:
      - cyphon
    links:
      - cyphon
    depends_on:
      - cyphon

  # PostgreSQL PostGIS database for Cyphon
  postgres:
    image: mdillon/postgis:${POSTGRES_VER}
    restart: always
    env_file:
      - ./config/env/cyphon.env

  # RabbitMQ message broker for Cyphon and Logstash
  rabbit:
    image: rabbitmq:${RABBITMQ_VER}
    restart: always
    env_file:
      - ./config/env/cyphon.env

  # RabbitMQ queue consumer for Cyphon
  receiver:
    extends:
      file: common-services.yml
      service: cyphon-prod
    restart: always
    command: ../entrypoints/run_receiver.sh
    volumes_from:
      - geoip
    links:
      - elasticsearch
      - mongo
      - postgres
      - rabbit
    depends_on:
      - cyphon
      - rabbit
